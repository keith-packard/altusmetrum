/*
 * Copyright Â© 2018 Bdale Garbee <bdale@gag.com>, GPLv3+
 */

load "footprint.5c"
import Footprint;

int total_pad = 28;
real center_gap = 7.20 - 1.75;
real pad_height = 1.75;
real pad_width = 0.45;
real pad_spacing = 0.65;

if (dim(argv) > 1)
	total_pad = string_to_integer(argv[1]);
if (dim(argv) > 2)
	center_gap = string_to_real(argv[2]);
if (dim(argv) > 3)
	pad_height = string_to_real(argv[3]);
if (dim(argv) > 4)
	pad_width = string_to_real(argv[4]);
if (dim(argv) > 5)
	pad_spacing = string_to_real(argv[5]);

int num_pad = total_pad / 2;	/* per side */

string name = sprintf ("SSOP-%d", total_pad);

real package_width = (num_pad - 1) * pad_spacing + 1.75;

real package_height = center_gap - 0.15;

real pad_y_off = center_gap / 2 + pad_height / 2;

element_start(name);

real pad_off(int n) {
	return pad_spacing * (n - (num_pad - 1) / 2);
}

real corner(int dx, int dy) {
	real	x = dx * package_width / 2;
	real	y = dy * package_height / 2;
	real	len = 0.4;

	line(x, y, x - dx * len, y);
	line(x, y, x, y - dy * len);
}

corner(-1, -1);
corner(1, -1);
corner(-1, 1);
corner(1, 1);

real dot_off = -.3;

line(-package_width/2 + dot_off, package_height/2 - dot_off,
     -package_width/2 + dot_off, package_height/2 - dot_off);

for (int pad = 0; pad < num_pad; pad++) {
	/* bottom (1-num_pad) */

	pad_mm(pad_off(pad),
	       pad_y_off,
	       pad_width,
	       pad_height,
	       sprintf("%d", pad + 1),
	       sprintf("%d", pad + 1));
	
	/* top side (total_pad - num_pad+1) */

	pad_mm(pad_off(pad),
	       -pad_y_off,
	       pad_width,
	       pad_height,
	       sprintf("%d", total_pad - pad),
	       sprintf("%d", total_pad - pad));
	
}

element_end();
