/*
 * Copyright Â© 2012 Keith Packard <keithp@keithp.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
 */

load "footprint.5c"
import Footprint;

real outer_pad_width = 0.50;
real outer_pad_height = 0.375;
real inner_pad_width = 0.65;
real inner_pad_height = 0.3;
real pad_spacing = 0.5375;

real package_width = 1.6;
real package_height = 2;

real outer_pad_x_off = 1.7 / 2;
real inner_pad_x_off = (1.7 + inner_pad_width - outer_pad_width) / 2;

real num_pad = 3;	/* per side */

element_start("sot666");

real pad_off(int n) {
	return pad_spacing * (n - (num_pad - 1) / 2);
}

real corner(int dx, int dy) {
	real	x = dx * package_width / 2;
	real	y = dy * package_height / 2;
	real	len = 0.4;

	line(x, y, x - dx * len, y);
	line(x, y, x, y - dy * len);
}

corner(-1, -1);
corner(1, -1);
corner(-1, 1);
corner(1, 1);

real dot_off = -.3;

line(-package_width/2 + dot_off, -package_height/2 + dot_off,
     -package_width/2 + dot_off, -package_height/2 + dot_off);

for (int pad = 0; pad < num_pad; pad++) {
	/* left side (1-3) */

	real	x, y, w, h;
	if (pad == 1) {
		x = inner_pad_x_off;
		y = pad_off(pad);
		w = inner_pad_width;
		h = inner_pad_height;
	} else {
		x = outer_pad_x_off;
		y = pad_off(pad);
		w = outer_pad_width;
		h = outer_pad_height;
	}
	pad_mm(-x,
	       y,
	       w,
	       h,
	       sprintf("%d", pad + 1),
	       sprintf("%d", pad + 1));

	/* right side (4-6) */

	pad_mm(x,
	       -y,
	       w,
	       h,
	       sprintf("%d", pad + 4),
	       sprintf("%d", pad + 4));

}

element_end();
